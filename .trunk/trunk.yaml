# This file controls the behavior of Trunk: https://docs.trunk.io/cli
# To learn more about the format of this file, see https://docs.trunk.io/reference/trunk-yaml
version: 0.1
cli:
  version: 1.22.8
# Trunk provides extensibility via plugins. (https://docs.trunk.io/plugins)
plugins:
  sources:
    - id: trunk
      ref: v1.6.5
      uri: https://github.com/trunk-io/plugins
# Many linters and tools depend on runtimes - configure them here. (https://docs.trunk.io/runtimes)
runtimes:
  enabled:
    - node@18.12.1
    - python@3.10.8
    - ruby@3.1.4
    - rust@2024-05-01
# This is the section where you manage your linters. (https://docs.trunk.io/check/configuration)
lint:
  enabled:
    - rubocop@1.39.0
    - actionlint@1.7.4
    - bandit@1.7.10
    - black@24.10.0
    - checkov@3.2.296
    - clippy@2024-05-01
    - eslint@9.14.0
    - git-diff-check
    - isort@5.13.2
    - markdownlint@0.42.0
    - osv-scanner@1.9.1
    - prettier@3.3.3
    - ruff@0.7.3
    - rustfmt@2024-05-01
    - taplo@0.9.3
    - trufflehog@3.83.7
    - yamllint@1.35.1
    - pyright@1.1.389
  definitions:
    - name: eslint
      commands:
        - name: lint
          run_when: [cli, monitor, ci]
    - name: pyright
      commands:
        - name: lint
          run: pyright -p context-py --outputjson
          target: .
          batch: false
    - name: clippy
      runtime: rust
      environment:
        - name: PATH
          list: ["${runtime}", "${env.PATH}"]
      commands:
        - name: lint
          run:
            cargo clippy --message-format json --locked --all-targets --all-features --
            --cap-lints=warn --no-deps
          output: clippy
          target: ${parent_with(Cargo.toml)}
          success_codes: [0, 101, 383]
          run_from: ${target_directory}
          disable_upstream: true
    - name: rustfmt
      runtime: rust
      commands:
        - name: format
          output: rewrite
          read_output_from: stdout
          stdin: true
          success_codes: [0]
          cache_results: false # sometimes caches an empty file for some reason
          in_place: false
          batch: false
          run: rustfmt --edition=2021
  ignore:
    - linters: [ALL]
      paths:
        # Ignore generated files
        - target/**
        - "**/target/**"
    - linters: [rubocop]
      paths:
        - .github/actions/test_ruby_gem_uploads/Gemfile
actions:
  definitions:
    - id: generate-pyi
      runtime: rust
      description: Generate Python stubs
      # Don't use hermetic runtime so we can use nightly cargo
      run: |
        cargo run --bin stub_gen --manifest-path context-py/Cargo.toml --no-default-features
  enabled:
    - generate-pyi
    - git-lfs
    - trunk-announce
    - trunk-check-pre-push
    - trunk-fmt-pre-commit
    - trunk-upgrade-available
downloads:
  - name: rust
    downloads:
      - os:
          macos: apple-darwin
          linux: unknown-linux-gnu
        cpu:
          x86_64: x86_64
          arm_64: aarch64
        url: https://static.rust-lang.org/dist/${version}/rust-nightly-${cpu}-${os}.tar.gz
        strip_components: 2
  - name: rust-src
    downloads:
      - url: https://static.rust-lang.org/dist/${version}/rust-src-nightly.tar.xz
tools:
  disabled:
    # To see why these are disabled, see
    # https://trunk-io.slack.com/archives/C08AEDGMZNH/p1748962373354059
    - rust-src
    - rust
  definitions:
    - name: rust-src
      download: rust-src
      known_good_version: 2024-05-01
      shims: [rust-src]
  runtimes:
    - ruby
    - node
  enabled:
    - gh@2.62.0
    - pnpm@9.14.2
    # Update `RUST_SRC_PATH` path to `rust-src` if this is updated
    # IfChange
    # ThenChange .envrc
