# This file is autogenerated by maturin v1.5.1
# To regenerate, run
#
#    maturin generate-ci -m ./context-py/Cargo.toml --platform linux --platform macos --pytest --output ./.github/workflows/pyo3.yml github
#
name: Build and test context-py

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request: {}
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - uses: trunk-io/trunk-action/setup@v1
      - name: Setup Rust & Cargo
        uses: ./.github/actions/setup_rust_cargo
      - name: Generate Python stubs
        run: ${TRUNK_PATH} run generate-pyi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --manifest-path ./context-py/Cargo.toml
          manylinux: auto
          # Required version in order to support Glue
          container: "2_17"
          before-script-linux: |
            # Needed for `openssl-sys`:
            # https://docs.rs/openssl/latest/openssl/
            if [ -f /usr/bin/yum ]; then
              # quay.io/pypa/manylinux2014_x86_64:latest
              /usr/bin/yum -y upgrade
              /usr/bin/yum -y install perl-IPC-Cmd perl-List-MoreUtils openssl-devel python3-pip unzip
              /usr/bin/ln -s /usr/bin/pip3 /usr/bin/pip
            elif [ -f /usr/bin/apt ]; then
              # ghcr.io/rust-cross/manylinux2014-cross:aarch64
              /usr/bin/apt update
              /usr/bin/apt install -y pkg-config libssl-dev unzip
            fi
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        shell: bash
        run: |
          set -e
          pip install uv
          cd ./context-py
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements-dev.txt
          uv pip install context-py --find-links ../dist --force-reinstall
          pytest --cov
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'aarch64') }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.platform.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U uv
          run: |
            set -e
            cd ./context-py
            uv venv
            source .venv/bin/activate
            uv pip install -r requirements-dev.txt
            uv pip install context-py --find-links ../dist --force-reinstall
            pytest --cov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: trunk-io/analytics-cli
          directory: ./context-py

      - name: Upload wheel package to S3
        uses: ./.github/actions/upload_to_s3
        if: "!cancelled() && github.event_name != 'pull_request'"
        with:
          bucket: ${{ secrets.S3_ASSET_BUCKET }}
          name: linux-${{ matrix.platform.target }}
          path: dist
          s3-flags: --recursive
          role-to-assume: ${{ secrets.S3_UPLOAD_ROLE_ARN }}

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - uses: trunk-io/trunk-action/setup@v1
      - name: Setup Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 16
      - name: Setup Rust & Cargo
        uses: ./.github/actions/setup_rust_cargo
      - name: Generate Python stubs
        run: ${TRUNK_PATH} run generate-pyi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --manifest-path ./context-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist
      - name: Upload wheel package to S3
        uses: ./.github/actions/upload_to_s3
        if: "!cancelled() && github.event_name != 'pull_request'"
        with:
          bucket: ${{ secrets.S3_ASSET_BUCKET }}
          name: darwin-${{ matrix.platform.target }}
          path: dist
          s3-flags: --recursive
          role-to-assume: ${{ secrets.S3_UPLOAD_ROLE_ARN }}
  sdist:
    # TODO(TRUNK-13050): update to `ubuntu-latest` when `maturin-action` gets updated to support it
    # https://github.com/PyO3/maturin-action/issues/291
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: trunk-io/trunk-action/setup@v1
      - name: Setup Rust & Cargo
        uses: ./.github/actions/setup_rust_cargo
      - name: Generate Python stubs
        run: ${TRUNK_PATH} run generate-pyi
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path ./context-py/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist
      - name: Upload wheel package to S3
        uses: ./.github/actions/upload_to_s3
        if: "!cancelled() && github.event_name != 'pull_request'"
        with:
          bucket: ${{ secrets.S3_ASSET_BUCKET }}
          name: wheels-sdist.tar.gz
          path: dist/context_py-0.1.0.tar.gz
          role-to-assume: ${{ secrets.S3_UPLOAD_ROLE_ARN }}
