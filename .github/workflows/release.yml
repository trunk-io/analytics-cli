name: Release Analytics CLI
on:
  workflow_dispatch:
    inputs:
      release_tag:
        type: string
        description: Tag to create
        required: True
concurrency: ${{ github.workflow }}

jobs:
  build_release:
    name: Build Release - ${{ matrix.platform.target }}
    strategy:
      matrix:
        platform:
          - os-name: linux-x86_64
            # cross-rs is unsupported on public-amd64-2xlarge
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact-name: x86_64-unknown-linux

          - os-name: linux-aarch64
            # cross-rs is unsupported on public-amd64-2xlarge
            runs-on: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            artifact-name: aarch64-unknown-linux

          - os-name: linux-86_64
            # cross-rs is unsupported on public-amd64-2xlarge
            runs-on: ubuntu-latest
            target: x86_64-unknown-illumos
            artifact-name: x86_64-unknown-illumos

          - os-name: x86_64-darwin
            runs-on: macos-latest
            target: x86_64-apple-darwin
            artifact-name: x86_64-apple-darwin

          - os-name: aarch64-darwin
            runs-on: macos-latest
            target: aarch64-apple-darwin
            artifact-name: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: "true"

      - name: Setup Rust & Cargo
        uses: ./.github/actions/setup_rust_cargo
        if: "!cancelled()"

      - name: Update version
        uses: ./.github/actions/update_version
        if: "!cancelled()"
        with:
          version: ${{ github.event.inputs.release_tag }}

      - name: Build darwin target
        uses: ./.github/actions/build_cli_macos_target
        if: "!cancelled() && contains(matrix.platform.os-name, 'darwin')"
        with:
          target: ${{ matrix.platform.target }}
          profile: release-with-debug

      - name: Build unix target
        uses: ./.github/actions/build_cli_linux_target
        if: "!cancelled() && !contains(matrix.platform.os-name, 'darwin')"
        with:
          target: ${{ matrix.platform.target }}
          profile: release-with-debug

      - name: Upload debug info to Sentry
        uses: ./.github/actions/upload_sentry_debug_info
        if: "!cancelled()"
        with:
          target: ${{ matrix.platform.target }}
          sentry-org: ${{ secrets.SENTRY_ORG }}
          sentry-project: ${{ secrets.SENTRY_PROJECT }}
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - uses: actions/upload-artifact@v4
        if: "!cancelled()"
        with:
          name: ${{ matrix.platform.artifact-name }}
          path: target/${{ matrix.platform.target }}/release-with-debug/trunk-analytics-cli
          if-no-files-found: error

  perform_smoke_test:
    name: Smoke test ${{ github.event.inputs.release_tag }}
    uses: ./.github/workflows/smoke_test_main.yml

  tag_and_release:
    name: Tag and Release [ ${{ github.event.inputs.release_tag }} ]
    runs-on: public-amd64-small
    needs: [build_release, perform_smoke_test]
    if: needs.perform_smoke_test.result == 'success'

    steps:
      - uses: actions/checkout@v4

      - id: download
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Compress binaries
        run: |
          for target in $(ls build)
          do
            chmod u+x build/${target}/trunk-analytics-cli
            tar czvf \
              build/trunk-analytics-cli-${target}.tar.gz \
              -C build/${target} trunk-analytics-cli
          done

      - name: Install gh
        uses: trunk-io/trunk-action/install@v1
        with:
          tools: gh

      - name: Create GH release and upload binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create --prerelease --latest=false \
            --target ${{ github.ref }} \
            --generate-notes ${{ github.event.inputs.release_tag }} \
            ./build/*.tar.gz

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ github.event.inputs.release_tag }}
