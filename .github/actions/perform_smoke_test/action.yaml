name: Perform Smoke Test
description: Runs the actual smoke tests

inputs:
  cli-binary-location:
    description: Location for the cli binary, relative to current directory. Uses x86_64-unknown-linux binaries.
  staging-api-token:
    description: Api token for the trunk-staging-org org on trunk-staging (should be available in secrets)
  production-api-token:
    description: Api token for the trunk org on trunk (should be available in secrets)
  environment-type:
    description: staging if you only want to run for staging, production if you only want production, both for both

outputs:
  production-success: ${{ steps.production-result.outputs.production-success }}
  staging-success: ${{ steps.staging-result.outputs.staging-success }}

runs:
  using: composite
  steps:
    - name: Make executable
      id: make-exe
      shell: bash
      run: |
        chmod +x ${{ inputs.cli-binary-location }}
        openssl dgst -sha256 ${{ inputs.cli-binary-location }} | awk '{print $NF}'
        ls -l ${{ inputs.cli-binary-location }}

    - name: Run tests on staging
      id: staging-test-run
      if: always() && steps.make-exe.result == 'success' && (inputs.environment-type == 'staging' || inputs.environment-type == 'both')
      env:
        TRUNK_PUBLIC_API_ADDRESS: https://api.trunk-staging.io
        FAIL_TEST: true
      shell: bash
      run: |
        ./${{ inputs.cli-binary-location }} test \
        --org-url-slug trunk-staging-org \
        --junit-paths ${{ github.workspace }}/target/**/*junit.xml \
        --token ${{ inputs.staging-api-token }} \
        cargo nextest run -p smoke-test --profile ci

    - name: Upload to staging
      id: staging-upload
      if: always() && steps.staging-test-run.result == 'success' && (inputs.environment-type == 'staging' || inputs.environment-type == 'both')
      env:
        TRUNK_PUBLIC_API_ADDRESS: https://api.trunk-staging.io
      shell: bash
      run: |
        ./${{ inputs.cli-binary-location }} upload \
        --org-url-slug trunk-staging-org \
        --junit-paths ${{ github.workspace }}/target/**/*junit.xml \
        --token ${{ inputs.staging-api-token }}

    - name: Staging result
      id: staging-result
      shell: bash
      run: echo "staging-success=${{ steps.staging-upload.result == 'success' && (inputs.environment-type == 'staging' || inputs.environment-type == 'both') }}" >> $GITHUB_OUTPUTS

    - name: Run tests on production
      id: production-test-run
      if: always() && steps.make-exe.result == 'success' && (inputs.environment-type == 'production' || inputs.environment-type == 'both')
      env:
        TRUNK_PUBLIC_API_ADDRESS: https://api.trunk.io
        FAIL_TEST: true
      shell: bash
      run: |
        ./${{ inputs.cli-binary-location }} test \
        --org-url-slug trunk \
        --junit-paths ${{ github.workspace }}/target/**/*junit.xml \
        --token ${{ inputs.production-api-token }} \
        cargo nextest run -p smoke-test --profile ci

    - name: Upload to production
      id: production-upload
      if: always() && steps.production-upload.result == 'success' && (inputs.environment-type == 'production' || inputs.environment-type == 'both')
      env:
        TRUNK_PUBLIC_API_ADDRESS: https://api.trunk.io
      shell: bash
      run: |
        ./${{ inputs.cli-binary-location }} upload \
        --org-url-slug trunk \
        --junit-paths ${{ github.workspace }}/target/**/*junit.xml \
        --token ${{ inputs.production-api-token }}

    - name: Production result
      id: production-result
      shell: bash
      run: echo "production-success=${{ steps.production-upload.result == 'success' && (inputs.environment-type == 'production' || inputs.environment-type == 'both') }}" >> $GITHUB_OUTPUTS
